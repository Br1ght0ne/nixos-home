#compdef minikube

local subcommands=(
  "addons:Modify minikube's kubernetes addons"
  "cache:Add or delete an image from the local cache."
  "completion:Outputs minikube shell completion for the given shell (bash or zsh)"
  "config:Modify minikube config"
  "dashboard:Access the kubernetes dashboard running within the minikube cluster"
  "delete:Deletes a local kubernetes cluster"
  'docker-env:Sets up docker env variables; similar to $(docker-machine env)'
  "help:Help about any command"
  "ip:Retrieves the IP address of the running cluster"
  "kubectl:Run kubectl"
  "logs:Gets the logs of the running instance, used for debugging minikube, not user code"
  "mount:Mounts the specified directory into minikube"
  "profile:Profile gets or sets the current minikube profile"
  "service:Gets the kubernetes URL(s) for the specified service in your local cluster"
  "ssh:Log into or run a command on a machine with SSH; similar to 'docker-machine ssh'"
  "ssh-key:Retrieve the ssh identity key path of the specified cluster"
  "start:Starts a local kubernetes cluster"
  "status:Gets the status of a local kubernetes cluster"
  "stop:Stops a running local kubernetes cluster"
  "tunnel:tunnel makes services of type LoadBalancer accessible on localhost"
  "update-check:Print current and latest version number"
  "update-context:Verify the IP address of the running cluster in kubeconfig."
  "version:Print the version of minikube"
)

_arguments -s -S \
  -h"[Show help for current command]" \
  --alsologtostderr"[log to standard error as well as files]" \
  {-b+,--bootstrapper=}"[The name of the cluster bootstrapper (default 'kubeadm')]:string: " \
  --log_backtrace_at="[when logging hits line file:N, emit a stack trace (default :0)]:file:_files -S \:" \
  --log_dir="[If non-empty, write log files in this directory]:log directory:_path_files -/" \
  --logtostderr"[log to standard error instead of files]" \
  {-p+,--profile=}"[The name of the minikube VM being used (default 'minikube')]:string: " \
  --stderrthreshold="[logs at or above this threshold go to stderr (default 2)]:severity: " \
  {-v+,--v=}"[log level for V logs]:level: " \
  --vmodule="[comma-separated list of pattern=N settings for file-filtered logging]:moduleSpec: " \
  '1: :->subcommand_name' \
  ': :->subcommand_options'

case $state in
  subcommand_name)
    _describe 'subcommands' subcommands
    ;;
  subcommand_options)
    case $words[2] in
      logs)
        _arguments -s -S \
          {-f,--follow}"[Show only the most recent journal entries, and continuously print new entries as they are appended to the journal]" \
          {-n+,--length=}"[Number of lines back to go within the log (default 50)]" \
          --problems"[Show only log entries which point to known problems]"
        ;;
    esac
    ;;
esac

# Local Variables:
# mode: sh
# sh-shell: zsh
# End:
